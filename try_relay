import cv2
import serial
import time
from ultralytics import YOLO

# Connect to Arduino
arduino = serial.Serial('COM3', 9600)  # Make sure to use the correct COM port
time.sleep(2)  # Wait for the serial connection to initialize

# Initialize webcam
cap = cv2.VideoCapture(0)

# Load your YOLO model (replace 'path/to/your/model.pt' with the actual path to your model)
model_path = r'C:\Users\Daryl Guerzon\Desktop\dogs\TRY_Relay\Models\etian35.pt'  # Your custom YOLO model path
model = YOLO(model_path)

# Relay cooldown management
relay_cooldown = 5  # Cooldown period in seconds
last_activation_time = time.time() - relay_cooldown  # Initialize to allow immediate activation

while True:
    ret, frame = cap.read()
    if not ret:
        break

    # Perform inference with your custom model
    results = model(frame)

    # Get predictions for the first image in the batch
    detections = results[0].boxes

    chicken_detected = False
    for box in detections:
        class_id = int(box.cls)  # Get the class ID of the detected object
        confidence = box.conf[0].item()  # Get the confidence of the prediction

        # Check if the detected object is a chicken (assuming chicken is class ID 0)
        if class_id == 0 and confidence > 0.5:  # Adjust confidence threshold as needed
            chicken_detected = True

            # Draw bounding box on the frame
            x1, y1, x2, y2 = box.xyxy[0].int().tolist()  # Get bounding box coordinates
            cv2.rectangle(frame, (x1, y1), (x2, y2), (0, 255, 0), 2)  # Draw bounding box
            break  # Exit loop after first chicken is detected

    current_time = time.time()
    if chicken_detected and (current_time - last_activation_time >= relay_cooldown):
        arduino.write(b'1\n')  # Send command to turn ON relay
        print("Chicken detected. Relay ON.")
        last_activation_time = current_time  # Update last activation time
    elif not chicken_detected:
        arduino.write(b'0\n')  # Send command to turn OFF relay
        print("No chicken detected. Relay OFF.")

    # Display the frame
    cv2.imshow('Video', frame)

    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()
arduino.close()
